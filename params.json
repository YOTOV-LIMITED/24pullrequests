{
  "name": "24pullrequests",
  "tagline": ":christmas_tree: Giving back little gifts of code for Christmas",
  "body": "# 24 Pull Requests\r\n\r\n[![Build Status](https://travis-ci.org/24pullrequests/24pullrequests.svg?branch=master)](https://travis-ci.org/24pullrequests/24pullrequests)\r\n[![Dependency Status](https://img.shields.io/gemnasium/24pullrequests/24pullrequests.svg?style=flat)](https://gemnasium.com/24pullrequests/24pullrequests)\r\n[![Gitter chat](https://img.shields.io/badge/gitter-24pullrequests-brightgreen.svg?style=flat)](https://gitter.im/24pullrequests/24pullrequests)\r\n[![Code Climate](https://img.shields.io/codeclimate/github/24pullrequests/24pullrequests.svg?style=flat)](https://codeclimate.com/github/24pullrequests/24pullrequests)\r\n[![Test Coverage](https://img.shields.io/codeclimate/coverage/github/24pullrequests/24pullrequests.svg?style=flat)](https://codeclimate.com/github/24pullrequests/24pullrequests)\r\n\r\n> **Giving back little gifts of code** &#127873;\r\n\r\n24 Pull Requests is a yearly initiative to encourage developers around the world to send 24 pull requests between December 1st and December 24th.\r\n\r\nThis is the site to help promote the project, highlighting why, how and where to send your pull requests.\r\n\r\n\r\n## Get started\r\n\r\n* [Explore projects to help](http://24pullrequests.com/projects)\r\n* [Submit your project to get help](http://24pullrequests.com/projects/new)\r\n\r\n## Contributors\r\n\r\nOver 180 different people have contributed to the project, you can see them all here: https://github.com/24pullrequests/24pullrequests/graphs/contributors\r\n\r\n## Development\r\n\r\nSource hosted at [GitHub](https://github.com/24pullrequests/24pullrequests).\r\nReport issues/feature requests on [GitHub Issues](https://github.com/24pullrequests/24pullrequests/issues). Follow us on Twitter [@24pullrequests](https://twitter.com/24pullrequests). We also hangout on [Gitter](https://gitter.im/24pullrequests/24pullrequests).\r\n\r\n### Getting Started\r\n\r\nNew to Ruby? No worries! You can follow these instructions to install a local server, or you can use the included Vagrant setup.\r\n\r\n#### Installing a Local Server\r\n\r\nFirst things first, you'll need to install Ruby 2.3.3. I recommend using the excellent [rbenv](https://github.com/rbenv/rbenv),\r\nand [ruby-build](https://github.com/rbenv/ruby-build)\r\n\r\n```bash\r\nrbenv install 2.3.3\r\nrbenv global 2.3.3\r\n```\r\n\r\nNext, you'll need to make sure that you have PostgreSQL installed. This can be\r\ndone easily on OSX using [Homebrew](http://mxcl.github.io/homebrew/) or by using [http://postgresapp.com](http://postgresapp.com). Please see these [further instructions for installing Postgres via Homebrew](http://www.mikeball.us/blog/setting-up-postgres-with-homebrew/).\r\n\r\n```bash\r\nbrew install postgres phantomjs\r\n```\r\n\r\nOn Debian-based Linux distributions you can use apt-get to install Postgres:\r\n\r\n```bash\r\nsudo apt-get install postgresql postgresql-contrib libpq-dev\r\n```\r\n\r\nOn Windows, you can use the [Chocolatey package manager](http://chocolatey.org/) to install Postgres:\r\n\r\n```bash\r\nchoco install postgresql\r\n```\r\n\r\nNow, let's install the gems from the `Gemfile` (\"Gems\" are synonymous with libraries in other\r\nlanguages).\r\n\r\n```bash\r\ngem install bundler && rbenv rehash\r\nbundle install\r\n```\r\n\r\nOnce all the gems are installed, we'll need to create the databases and\r\ntables. Rails makes this easy through the use of \"Rake\" tasks.\r\n\r\n```bash\r\nbundle exec rake db:create:all\r\nbundle exec rake db:migrate\r\n```\r\n\r\nAnd we can also add some sample data with the **seed** task.\r\n\r\n```bash\r\nbundle exec rake db:seed\r\n```\r\n\r\nIf you are working on anything related to the email-generation code, you can use [MailCatcher](https://github.com/sj26/mailcatcher).\r\nSince we use Bundler, please read the [following](https://github.com/sj26/mailcatcher#bundler) before using MailCatcher.\r\n\r\nAlmost there! Now all we have to do is start up the Rails server and point\r\nour browser to <http://localhost:3000>\r\n\r\n```bash\r\nbundle exec rails s\r\n```\r\n#### Using Vagrant\r\n\r\nThe included Vagrant setup uses Ansible as provisioner. First, you'll need to install the dependencies:\r\n\r\n * [Vagrant](https://www.vagrantup.com/downloads.html)\r\n * [VirtualBox](https://www.virtualbox.org/wiki/Downloads)\r\n * [Ansible](http://docs.ansible.com/intro_installation.html)\r\n\r\n_Windows Users: Ansible does not support Windows as controller machine, but there's a little hack in the Vagrantfile that will allow you to run the provision using a local\r\nSSH connection Guest-Guest. Just install Vagrant and VirtualBox, and you should be able to get it running._\r\n\r\nOnce you have everything installed, go to the project directory via console and run:\r\n\r\n    $ vagrant up\r\n\r\nThe first time you run `vagrant up`, the process will take several minutes, since it will download a box and run all necessary tasks to get the server ready. When the process\r\nis finished, log in to run the rails dev server:\r\n\r\n    $ vagrant ssh\r\n    $ cd /vagrant\r\n    $ bundle exec rails s -b 0.0.0.0\r\n\r\nThen you should be able to access the application through your regular browser at http://192.168.12.34:3000.\r\n\r\nSimply edit the files in the project directory using your favorite editor on your host machine and the changes will be automatically reflected in the `/vagrant` directory inside the guest virtual machine and so you can see the changes on your browser.\r\n\r\n### Tests\r\n\r\nStandard RSpec/Capybara tests are used for testing the application. The tests can be run with `bundle exec rake`.\r\n\r\nYou can set up the test environment with `bundle exec rake db:test:prepare`, which will create the test DB and populate its schema automatically. You don't need to do this for every test run, but it will let you easily keep up with migrations. If you find a large number of tests are failing you should probably run this.\r\n\r\nIf you are using the omniauth environment variables\r\n(GITHUB_KEY, GITHUB_SECRET, TWITTER_KEY, TWITTER_SECRET)\r\nfor **another** project, you will need to either\r\n * unset them before running your tests or\r\n * reset the omniauth environment variables after creating a GitHub (omniauth) application for this project\r\n\r\nas it will use it to learn more about the developers and for pull requests.\r\n\r\n### Environment variables\r\n\r\n`bundle exec figaro install`\r\n\r\nOr for more information about using figaro, see https://github.com/laserlemon/figaro\r\n\r\n### Note on Patches/Pull Requests\r\n\r\n * Fork the project.\r\n * Make your feature addition or bug fix.\r\n * Add tests for it. This is important so I don't break it in a future version unintentionally.\r\n * Send a pull request. Bonus points for topic branches.\r\n\r\n### Code of Conduct\r\n\r\nPlease note that this project is released with a [Contributor Code of Conduct](CODE_OF_CONDUCT.md). By participating in this project you agree to abide by its terms.\r\n\r\n## Copyright\r\n\r\nCopyright (c) 2016 Andrew Nesbitt. See [LICENSE](https://github.com/24pullrequests/24pullrequests/blob/master/LICENSE) for details.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}